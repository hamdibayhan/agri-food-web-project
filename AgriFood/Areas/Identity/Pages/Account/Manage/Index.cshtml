@page
@model IndexModel

@{
    ViewData["Title"] = "Profile";
}

<div class="row mb-5">
    <div class="col-md-10">
        <h4 class="text-center">@ViewData["Title"]</h4>
            @await Html.PartialAsync("_StatusMessage", Model.StatusMessage)
        <hr />
        <div class="card mb-5">
            <div class="card-body">   
                <form id="profile-form" method="post">
                    @if((bool)ViewData["IsFarmerUser?"])
                    {
                        <div class="form-group">
                            <label asp-for="Input.FarmName"></label>
                            <input asp-for="Input.FarmName" class="form-control" />
                            <span asp-validation-for="Input.FarmName" class="text-danger"></span>
                        </div>
                    }
                    <div class="form-group">
                        <label asp-for="Input.Email"></label>
                        <div class="input-group">
                            <input asp-for="Input.Email" class="form-control" />
                            <span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
                        </div>
                        <span asp-validation-for="Input.Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.PhoneNumber"></label>
                        <input asp-for="Input.PhoneNumber" class="form-control" />
                        <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Input.Description"></label>
                        <input asp-for="Input.Description" class="form-control" />
                        <span asp-validation-for="Input.Description" class="text-danger"></span>
                    </div>
                    @if((bool)ViewData["IsFarmerUser?"])
                    {
                        <div class="form-group">
                            <input asp-for="Input.Longitude" class="form-control" hidden />
                        </div>
                        <div class="form-group">
                            <input asp-for="Input.Latitude" class="form-control" hidden />
                        </div>
                        <h5>Change for location as click the to new location</h5>
                        <div id="profile-map"></div>
                    }
                    <button type="submit" class="mt-3 btn btn-primary btn-block">Save</button>
                </form>
            </div>
        </div>            
    </div>
</div>

@if((bool)ViewData["IsFarmerUser?"])
{
<script>
    var map;
    var markers = [];
    let default_longitude = 32.8530758
    let default_latitude = 39.920772
    let longitude = parseFloat($('#Input_Longitude').val() == 0 ? default_longitude : $('#Input_Longitude').val())
    let latitude = parseFloat($('#Input_Latitude').val() == 0 ? default_latitude : $('#Input_Latitude').val())
    
    if($('#Input_Longitude').val() & $('#Input_Latitude').val())
    {
        $('#Input_Longitude').val(default_longitude);
        $('#Input_Latitude').val(default_latitude);
    }

    function initMap() {
        var haightAshbury = {lat: latitude, lng: longitude};

        map = new google.maps.Map(document.getElementById('profile-map'), {
            zoom: 12,
            center: haightAshbury,
            mapTypeId: 'terrain'
        });

        map.addListener('click', function(event) {
            addMarker(event.latLng);
        });

        addMarker(haightAshbury);
    }

    function addMarker(location) {
        deleteMarkers()
        var marker = new google.maps.Marker({
            position: location,
            map: map
        });

        $('#Input_Longitude').val(location.lng);
        $('#Input_Latitude').val(location.lat);
        markers.push(marker);
    }

    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    function deleteMarkers() {
        setMapOnAll(null);
        markers = [];
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA2DE8ng2ubnaykb6ZToJbYwXKHD7iGS8o&callback=initMap"
        async defer></script>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
